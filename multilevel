import java.util.*;

public class MultilevelQueue {
    public static void main(String[] args) {
        int[][] processList = {{0, 5, 1, 1}, {1, 3, 2, 2}, {2, 4, 3, 1}, {4, 1, 4, 2}}; // {AT, BT, ID, Queue}
        multilevelQueue(processList);
    }

    static void multilevelQueue(int[][] processList) {
        List<int[]> queue1 = new ArrayList<>();
        List<int[]> queue2 = new ArrayList<>();
        for (int[] process : processList) {
            if (process[3] == 1) queue1.add(process); // Priority Queue 1
            else queue2.add(process); // Queue 2
        }

        System.out.println("Queue 1 (FCFS):");
        fcfs(queue1);
        System.out.println("Queue 2 (FCFS):");
        fcfs(queue2);
    }

    static void fcfs(List<int[]> processes) {
        processes.sort(Comparator.comparingInt(a -> a[0]));
        int time = 0, totalWT = 0, totalTT = 0;

        for (int[] p : processes) {
            time = Math.max(time, p[0]) + p[1];
            int tt = time - p[0], wt = tt - p[1];
            totalWT += wt;
            totalTT += tt;
            System.out.printf("P%d: CT=%d, TT=%d, WT=%d%n", p[2], time, tt, wt);
        }
        System.out.printf("Avg TT: %.2f, Avg WT: %.2f%n", totalTT / (double) processes.size(), totalWT / (double) processes.size());
    }
}
